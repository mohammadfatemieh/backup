#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xiomodule.h"
#define adlen 1
u32 var;
//u16 addb[adlen];
u16 addb[adlen];
u32 addb1[adlen];
u16 addn[adlen];
u32 addn1[adlen];
u16 aflag;
void testAD(void)
{	u16 din;
XIOModule iomodule;
XIOModule_Initialize(&iomodule, XPAR_IOMODULE_0_DEVICE_ID);
XIOModule_Start(&iomodule);
	din=XIOModule_IoReadHalfword(&iomodule, 0x1020);
	XIOModule_IoWriteHalfword(&iomodule, 0x1000, din);
}

void readAD(void)
{
	XIOModule iomodule;
	microblaze_enable_interrupts();//使能中断功能
	XIOModule_Initialize(&iomodule, XPAR_IOMODULE_0_DEVICE_ID);
	XIOModule_Start(&iomodule);
	u16 var;
	//u16 din;
	u16 din;
	u32 din1;
	u16 din2;
	u32 din3;
	for (var = 0; var<adlen; var++){
		//din=XIOModule_IoReadHalfword(&iomodule, 0x1020);//0x1020是AD的地址读16位数据
		din=XIOModule_IoReadHalfword(&iomodule, 0x1020);//0x1020是AD的地址，，，32位数据
		din1=XIOModule_IoReadWord(&iomodule, 0x1030);//0x1020是AD的地址，，，32位数据
		din2=XIOModule_IoReadHalfword(&iomodule, 0x1040);//0x1020是AD的地址，，，32位数据
		din3=XIOModule_IoReadWord(&iomodule, 0x1050);//0x1020是AD的地址，，，32位数据
		if (din&0x8000)
		{
		    din=~din^0x7FFF+1;//首位还没有处理
		    din1=~din1+1;
		}

		if (din2&0x8000)
				{
			        din2=~din2^0x7FFF+1;//首位还没有处理
				    din3=~din3+1;
				}

		//addb[var]=din;
		//addb[var]=din;
		//addb[var]=din;
		//addb[var]=din;
		addb[var]=din;

		addb1[var]=din1;
		//din1=XIOModule_IoReadWord(&iomodule, 0x1050);//0x1050是Asagain的地址
		addn[var]=din2;
		addn1[var]=din3;
//		XIOModule_IoWriteHalfword(&iomodule, 0x1000, addb[10]);
	}
}

void readFlag(void)
{
	XIOModule iomodule;
	microblaze_enable_interrupts();//使能中断功能
	XIOModule_Initialize(&iomodule, XPAR_IOMODULE_0_DEVICE_ID);
	XIOModule_Start(&iomodule);
	u16 var;
	//u16 din;
	u16 dinflag;
	dinflag=XIOModule_IoReadHalfword(&iomodule, 0x1060);//0x1020是AD的地址，，，32位数据
	aflag=dinflag;
}

void Uart_SendWord(Xint16 data)
{
    init_platform();
	XIOModule iomodule;
	microblaze_enable_interrupts();//使能中断功能
	XIOModule_Initialize(&iomodule, XPAR_IOMODULE_0_DEVICE_ID);
	XIOModule_Start(&iomodule);

	Xuint8 sdata[2]={0};
	*sdata=data>>8;
	*(sdata+1)=data;
	Xuint8 index=0;
	Xuint8 count;
	while (index < 2)
	{
		count = XIOModule_Send(&iomodule, &sdata[index], 2 - index);
		index += count;
	}
}

void Uart_SendDWord(Xint32 data1)
{
    init_platform();
	XIOModule iomodule;
	microblaze_enable_interrupts();//使能中断功能
	XIOModule_Initialize(&iomodule, XPAR_IOMODULE_0_DEVICE_ID);
	XIOModule_Start(&iomodule);

	Xuint8 sdata1[4]={0};
	*sdata1=data1>>24;
	*(sdata1+1)=data1>>16;
	*(sdata1+2)=data1>>8;
	*(sdata1+3)=data1;
	Xuint8 index=0;
	Xuint8 count;
	while (index < 4)
	{
		count = XIOModule_Send(&iomodule, &sdata1[index], 4 - index);
		index += count;
	}
}




int main()
{

    init_platform();
	XIOModule iomodule;
	microblaze_enable_interrupts();//使能中断功能
	XIOModule_Initialize(&iomodule, XPAR_IOMODULE_0_DEVICE_ID);
	XIOModule_Start(&iomodule);
	int k;
	int r;
	int x;
	//for(x=0;x<4;x++)
		//{/////////////////////////////////////////////////////////////////////////////////
	for(k=0;k<6000;k++)
    {
	//	readFlag();
	//if(aflag == 0xFFFF){
    for(r=0;r<8000;r++)
    {}

    int j;
    readAD();//执行一次，采样值为adlen个

    for(j = 0; j <adlen ; j++){//
     Uart_SendWord(addb[j]);
     Uart_SendDWord(addb1[j]);
    // Uart_SendDWord(0xaaaaaaaa);

     Uart_SendWord(addn[j]);
     Uart_SendDWord(addn1[j]);
     Uart_SendDWord(0xbbbbbbbb);
     //Uart_SendDWord("end!\r\n");
//     Uart_SendWord(0)
     // }
    // aflag = 0;
	//}

     for(r=0;r<8000;r++)
         {}
	}

    //for(r=0;r<800;r++)
         //   {}
		}////////////////////////////////////////////////////////////////////////////////////////
	cleanup_platform();
	return 0;
}
